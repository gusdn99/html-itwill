<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <!-- Spring Web MVC 설정들을 애너테이션 기반으로 설정할 수 있도록 -->
    <mvc:annotation-driven><!-- 핸들러 매핑 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html; charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- Spring MVC에서 dispatcherServlet이 처리하지 않는 정적 요청에 필요한 파일들
    (이미지, CSS, JavaScript, ...)이 있는 폴더 위치를 설정.
    정적 리소스(이미지, CSS, JS, ...)들을 /webapp/static/ 폴더 아래에 작성. -->
    <mvc:resources location="/static/" mapping="/**" />
    <!-- /**: static으로 시작하는 모든 하위 폴더들을 사용하는 데 쓰임. (메서드 이름이 없는 파일들) -->
    
    <!-- 뷰 리졸버: Spring MVC에서 사용하는 뷰(JSP)를 찾기 위한 설정. -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!-- 기본 생성자 호출 -->
        <property name="prefix" value="/WEB-INF/views/" /> <!-- setproperty 지정 (자바의 필드와 유사)-->
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 컨트롤러 클래스들을 작성하는 패키지 이름 설정. 
    특정 패키지 아래에 애너테이션(@Controller, @RestController)이 사용된 클래스들을 찾아서
    객체를 생성하고 관리하기 위한 설정.
    디스패쳐 서블릿이 bean(객체)들을 생성하고 관리함.
    -->
    <context:component-scan base-package="com.itwill.spring1.web" />
    <!-- 패키지 안의 컴포넌트들을 스캔해서 애너테이션이 붙어있는 클래스의 객체를 생성하고 생성자를 호출함. -->
    
</beans>

