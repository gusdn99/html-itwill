<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.spring2.repository.PostDao"> <!-- PostDao 인터페이스 이름과 같아야 함. -->

    <!-- id는 인터페이스의 메서드 이름 -->
    <!-- posts 테이블 전체 검색. 목록 보기. -->
    <select id="selectOrderByIdDesc" resultType="Post"> <!-- resultType에 별명("Post")을 적음. (Post 클래스를 참조함.) -->
        select * from posts order by id desc
    </select>
    
    <!-- posts 테이블에서 id(PK)로 검색. 상세보기. -->
    <select id="selectById" resultType="Post"> 
        select * from posts where id = #{id} <!-- "?" 대신 "#{]"을 적음. #{id}는 selectById메서드의 아규먼트 -->
    </select>
    
    <!-- posts 테이블에 행 삽입. 새 글 작성. -->
    <insert id="insertPost" >
        insert into posts (title, content, author)
        values (#{title}, #{content}, #{author}) <!-- setString(post.getTitle()), setString(post.getContent()), setString(post.getContent())-->
    </insert>
    
    <!-- posts 테이블에서 해당 id의 제목과 내용, 수정시간 업데이트. -->
    <update id="updatePost">
        update posts
        set title = #{title}, content = #{content}, modified_time = systimestamp
        where id = #{id} 
    </update>
    
    <!-- posts 테이블에서 해당 id의 행을 삭제. -->
    <delete id="deletePost">
        delete from posts where id = #{id}
    </delete>
    
    <!-- posts 테이블에서 제목/내용/작성자로 검색. -->
    <select id="search" resultType="Post">
        <!-- 동적 쿼리 -->
        <bind name="searchKeyword" value="'%' + keyword + '%'" /> <!-- name은 변수이름 --> <!-- dto.getKeyword() - PostSearchDto의 필드-->
        select * from posts
        <where>
            <choose>
                <when test='category.equals("t")'> <!-- dto.getCategory() - PostSearchDto의 필드-->
                    upper(title) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("c")'>
                    upper(content) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("tc")'>
                    upper(title) like upper(#{searchKeyword}) or
                    upper(content) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("a")'>
                    upper(author) like upper(#{searchKeyword})
                </when>
            </choose>
        </where>
        order by id desc
    </select>
    
</mapper>