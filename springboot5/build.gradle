plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.itwill'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// Lombok ---------- test 안 붙이면 Querydsl 의존성 추가할 때 에러 뜸.
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	// <-----------------
	
	// Spring Security ----->
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	testImplementation 'org.springframework.security:spring-security-test'
	// <---------------------
		
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Querydsl ----------->
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    // <--------------------
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 관련 빌드 옵션 ----- Querydsl이 생성한 Q-타입 클래스들이 저장될 디렉토리
def querydslDir = "$buildDir/generated/querydsl"

sourceSets { // 생성된 Querydsl 소스를 메인 소스 세트에 추가
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) { // 애너테이션 프로세서가 생성한 소스 파일의 위치를 지정
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast { // 프로젝트를 클린할 때 생성된 Querydsl 소스 디렉토리를 삭제
    file(querydslDir).deleteDir()
}
// -----------------------------